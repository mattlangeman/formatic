# Generated by Django 5.2.5 on 2025-08-12 19:08

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("form_builder", "0005_alter_question_options_dynamicform_is_active_and_more"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="question",
            options={"ordering": ["order"]},
        ),
        migrations.AlterUniqueTogether(
            name="question",
            unique_together=set(),
        ),
        migrations.AlterField(
            model_name="question",
            name="page",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="questions",
                to="form_builder.page",
            ),
        ),
        migrations.CreateModel(
            name="QuestionGroup",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("slug", models.SlugField(blank=True)),
                (
                    "display_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("address", "Address Block"),
                            ("name", "Name Fields"),
                            ("date_time", "Date and Time"),
                            ("contact", "Contact Information"),
                            ("custom", "Custom Group"),
                        ],
                        help_text="Hint for frontend rendering",
                        max_length=50,
                    ),
                ),
                (
                    "config",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Group-level configuration and display settings",
                    ),
                ),
                ("order", models.IntegerField()),
                (
                    "created_datetime",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("modified_datetime", models.DateTimeField(auto_now=True)),
                (
                    "page",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="question_groups",
                        to="form_builder.page",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.AddField(
            model_name="question",
            name="question_group",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="questions",
                to="form_builder.questiongroup",
            ),
        ),
        migrations.AddConstraint(
            model_name="question",
            constraint=models.UniqueConstraint(
                condition=models.Q(("page__isnull", False)),
                fields=("page", "order"),
                name="unique_page_question_order",
            ),
        ),
        migrations.AddConstraint(
            model_name="question",
            constraint=models.UniqueConstraint(
                condition=models.Q(("question_group__isnull", False)),
                fields=("question_group", "order"),
                name="unique_group_question_order",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="questiongroup",
            unique_together={("page", "order"), ("page", "slug")},
        ),
    ]
